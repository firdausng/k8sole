
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel">@DetailsTitle</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        @if (Pod is not null)
        {
            <div class="col-10 order-md-last">
                <h5 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-primary">Container</span>
                    <span class="badge bg-primary rounded-pill">@Pod.Spec.Containers.Count</span>
                </h5>
                <div class="accordion" id="accordionPodContainer">
                    @foreach (var container in Pod.Spec.Containers)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingOne">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    @container.Name
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionPodContainer">
                                <div class="accordion-body">
                                    <p>Image: @container.Image</p>
                                    <h5>Resource Limit</h5>
                                    @foreach (var resourceLimit in container.Resources.Limits)
                                    {
                                        <p>@resourceLimit.Key: @resourceLimit.Value</p>
                                    }

                                    <h5>Resource Request</h5>
                                    @foreach (var resourceRequest in container.Resources.Requests)
                                    {
                                        <p>@resourceRequest.Key: @resourceRequest.Value</p>
                                    }

                                    <h5>Env Variables</h5>
                                    @foreach (var env in container.Env)
                                    {
                                        @if (env.ValueFrom?.SecretKeyRef is null)
                                        {
                                            <p>@env.Name: @env.Value</p>
                                        }else
                                        {
                                            <SecretData SecretName="@env.ValueFrom.SecretKeyRef.Name" Namespace="@Pod.Metadata.NamespaceProperty" SecretKey="@env.ValueFrom.SecretKeyRef.Key" />
                                            @*<p>@env.Name: <span @ref="podSecretData" @onclick="@(()=>GetSecretAsync(env.ValueFrom.SecretKeyRef.Key, env.ValueFrom.SecretKeyRef.Name, Pod.Metadata.NamespaceProperty))">@env.ValueFrom.SecretKeyRef.Key</span></p>*@
                                        }
                                        
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            @*        @foreach (var item in DetailsData)
        {
        <p>@item.Key : @item.Value</p>
        }*@
        }
        
    </div>
</div>